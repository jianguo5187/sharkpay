<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="user_name"    />
		<result property="nickName"     column="nick_name"    />
		<result property="remarkName"     column="remark_name"    />
		<result property="userType"        column="user_type"   />
        <result property="email"        column="email"        />
        <result property="phonenumber"  column="phonenumber"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="amount"    column="amount"   />
		<result property="score"    column="score"   />

		<result property="inviteCode"      column="invite_code"     />
		<result property="payPassword"     column="pay_password"    />
		<result property="realName"        column="real_name"       />
		<result property="idcardNo"        column="idcard_no"       />
		<result property="idcardFrontImg"  column="idcard_front_img"/>
		<result property="idcardBackImg"   column="idcard_back_img" />
		<result property="walletAddress"   column="wallet_address"  />
		<result property="parentUserId"    column="parent_user_id"   />
		<result property="parentNickName"    column="parent_nick_name"   />
		<result property="openId"    column="open_id"   />
		<result property="threeBallCommission"    column="three_ball_commission"    />
		<result property="fiveBallCommission"    column="five_ball_commission"    />
		<result property="tenBallCommission"    column="ten_ball_commission"    />
		<result property="threeBallCashback"    column="three_ball_cashback"    />
		<result property="fiveBallCashback"    column="five_ball_cashback"    />
		<result property="tenBallCashback"    column="ten_ball_cashback"    />
		<result property="isTest"    column="is_test"    />

        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />

		<result property="todayWinMoney"    column="today_win_money"    />

        <association property="dept"    javaType="SysDept"         resultMap="deptResult" />
        <collection  property="roles"   javaType="java.util.List"  resultMap="RoleResult" />
    </resultMap>
	
    <resultMap id="deptResult" type="SysDept">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>
	
    <resultMap id="RoleResult" type="SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"    column="data_scope"     />
        <result property="status"       column="role_status"    />
    </resultMap>

	<resultMap type="com.ruoyi.system.domain.vo.ParentUserListRespVO" id="ParentUserListResult">
		<result property="userId"       column="user_id"      />
		<result property="nickName"    column="nick_name"    />
		<result property="realName"    column="real_name"    />
		<result property="remarkName"     column="remark_name"    />
		<result property="avatar"       column="avatar"       />
		<result property="childCnt"       column="child_cnt"       />
		<result property="parentUserId"    column="parent_user_id"    />
		<result property="parentNickName"    column="parent_nick_name"    />
		<result property="parentRealName"    column="parent_real_name"    />
		<result property="parentRealName"     column="parent_remark_name"    />
		<result property="totalCommissionMoney"    column="total_commission_money"    />
		<result property="todayCommissionMoney"    column="today_commission_money"    />
		<result property="todayCommissionMoney"    column="today_commission_money"    />
		<result property="remainCommissionMoney"    column="remain_commission_money"    />
	</resultMap>

	<resultMap type="com.ruoyi.system.domain.vo.AgentUserListRespVo" id="AgentUserListResult">
		<result property="userId"       column="user_id"      />
		<result property="nickName"    column="nick_name"    />
		<result property="realName"    column="real_name"    />
		<result property="remarkName"     column="remark_name"    />
		<result property="avatar"       column="avatar"       />
		<result property="generateCommissionMoney"    column="generate_commission_money"    />
	</resultMap>
	
	<sql id="selectUserVo">
        select u.user_id, u.dept_id, u.user_name, u.nick_name, u.remark_name, u.user_type, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.amount, u.score, u.invite_code,u.pay_password,u.real_name,u.idcard_no,u.idcard_front_img,u.idcard_back_img,u.wallet_address,u.parent_user_id
               , u.open_id, u.three_ball_commission, u.five_ball_commission, u.ten_ball_commission, u.three_ball_cashback, u.five_ball_cashback, u.ten_ball_cashback, u.is_test, u.create_by, u.create_time, u.remark,
        d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from sys_user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>
    
    <select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
		select u.user_id, u.dept_id, u.nick_name, u.remark_name, u.user_type, u.user_name, u.email, u.avatar, u.phonenumber, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.amount, u.score, u.invite_code,u.pay_password,u.real_name,u.idcard_no,u.idcard_front_img,u.idcard_back_img,u.wallet_address,u.parent_user_id, u.open_id, u.three_ball_commission, u.five_ball_commission, u.ten_ball_commission, u.three_ball_cashback, u.five_ball_cashback, u.ten_ball_cashback, u.is_test, u.create_by, u.create_time, u.remark, d.dept_name, d.leader
		,p.nick_name as parent_nick_name
		,IFNULL(today_win.win_money,0) as today_win_money
		from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		left join sys_user p on p.user_id = u.parent_user_id
		left join sys_user_role r on r.user_id = u.user_id
		left join (
		SELECT
			uw.user_id as user_id
			,SUM(uw.win_money) AS win_money
			FROM userwin uw
			WHERE DATE_FORMAT(uw.win_time, '%Y-%m-%d' )= CURDATE()
			GROUP BY uw.user_id
		)today_win on today_win.user_id = u.user_id
		where u.del_flag = '0'
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="nickName != null and nickName != ''">
			AND u.nick_name like concat('%', #{nickName}, '%')
		</if>
		<if test="remarkName != null and remarkName != ''">
			AND u.remark_name like concat('%', #{remarkName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
		</if>
		<if test="childAdminShowFlag != null and childAdminShowFlag == '1'.toString() ">
			AND r.role_id = 4
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.remark_name, u.user_type, u.email, u.phonenumber, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and r.role_id = #{roleId}
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.remark_name, u.user_type, u.email, u.phonenumber, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.user_name = #{userName} and u.del_flag = '0'
	</select>
	
	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
		and u.del_flag = '0'
	</select>
	
	<select id="checkUserNameUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, user_name from sys_user where user_name = #{userName} and del_flag = '0' limit 1
	</select>
	
	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phonenumber from sys_user where phonenumber = #{phonenumber} and del_flag = '0' limit 1
	</select>
	
	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email} and del_flag = '0' limit 1
	</select>

	<select id="checkIdcardUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, idcard_no from sys_user where idcard_no=#{idcardNo} and del_flag = '0' limit 1
	</select>

	<select id="selectUserByInviteCode" parameterType="String" resultMap="SysUserResult">
		select user_id, invite_code, dept_id, user_type from sys_user where invite_code=#{inviteCode} and del_flag = '0' limit 1
	</select>
	
	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
 		insert into sys_user(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="nickName != null and nickName != ''">nick_name,</if>
			<if test="remarkName != null and remarkName != ''">remark_name,</if>
			<if test="userType != null and userType != ''">user_type,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
			<if test="amount != null">amount,</if>
			<if test="score != null">score,</if>
			<if test="inviteCode != null and inviteCode != ''">invite_code,</if>
			<if test="payPassword != null and payPassword != ''">pay_password,</if>
			<if test="realName != null and realName != ''">real_name,</if>
			<if test="idcardNo != null and idcardNo != ''">idcard_no,</if>
			<if test="idcardFrontImg != null and idcardFrontImg != ''">idcard_front_img,</if>
			<if test="idcardBackImg != null and idcardBackImg != ''">idcard_back_img,</if>
			<if test="walletAddress != null and walletAddress != ''">wallet_address,</if>
			<if test="parentUserId != null">parent_user_id,</if>
			<if test="openId != null and openId != ''">open_id,</if>
			<if test="threeBallCommission != null">three_ball_commission,</if>
			<if test="fiveBallCommission != null">five_ball_commission,</if>
			<if test="tenBallCommission != null">ten_ball_commission,</if>
			<if test="threeBallCashback != null">three_ball_cashback,</if>
			<if test="fiveBallCashback != null">five_ball_cashback,</if>
			<if test="tenBallCashback != null">ten_ball_cashback,</if>
			<if test="isTest != null and isTest != ''">is_test,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			create_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="nickName != null and nickName != ''">#{nickName},</if>
			<if test="remarkName != null and remarkName != ''">#{remarkName},</if>
			<if test="userType != null and userType != ''">#{userType},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
			<if test="amount != null">#{amount},</if>
			<if test="score != null">#{score},</if>
			<if test="inviteCode != null and inviteCode != ''">#{inviteCode},</if>
			<if test="payPassword != null and payPassword != ''">#{payPassword},</if>
			<if test="realName != null and realName != ''">#{realName},</if>
			<if test="idcardNo != null and idcardNo != ''">#{idcardNo},</if>
			<if test="idcardFrontImg != null and idcardFrontImg != ''">#{idcardFrontImg},</if>
			<if test="idcardBackImg != null and idcardBackImg != ''">#{idcardBackImg},</if>
			<if test="walletAddress != null and walletAddress != ''">#{walletAddress},</if>
			<if test="parentUserId != null">#{parentUserId},</if>
			<if test="openId != null and openId != ''">#{openId},</if>
			<if test="threeBallCommission != null">#{threeBallCommission},</if>
			<if test="fiveBallCommission != null">#{fiveBallCommission},</if>
			<if test="tenBallCommission != null">#{tenBallCommission},</if>
			<if test="threeBallCashback != null">#{threeBallCashback},</if>
			<if test="fiveBallCashback != null">#{fiveBallCashback},</if>
			<if test="tenBallCashback != null">#{tenBallCashback},</if>
			<if test="isTest != null and isTest != ''">#{isTest},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateUser" parameterType="SysUser">
 		update sys_user
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
			<if test="remarkName != null and remarkName != ''">remark_name = #{remarkName},</if>
			<if test="!(remarkName != null and remarkName != '')">remark_name = null,</if>
			<if test="userType != null and userType != ''">user_type = #{userType},</if>
 			<if test="email != null ">email = #{email},</if>
 			<if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
			<if test="amount != null">amount = #{amount},</if>
			<if test="score != null">score = #{score},</if>
			<if test="inviteCode != null and inviteCode != ''">invite_code = #{inviteCode},</if>
			<if test="payPassword != null and payPassword != ''">pay_password = #{payPassword},</if>
			<if test="realName != null and realName != ''">real_name = #{realName},</if>
			<if test="idcardNo != null and idcardNo != ''">idcard_no = #{idcardNo},</if>
			<if test="idcardFrontImg != null and idcardFrontImg != ''">idcard_front_img = #{idcardFrontImg},</if>
			<if test="idcardBackImg != null and idcardBackImg != ''">idcard_back_img = #{idcardBackImg},</if>
			<if test="walletAddress != null and walletAddress != ''">wallet_address = #{walletAddress},</if>
			<if test="openId != null and walletAddress != ''">open_id = #{openId},</if>
			<if test="walletAddress != null and walletAddress != ''">wallet_address = #{walletAddress},</if>
			<if test="threeBallCommission != null">three_ball_commission = #{threeBallCommission},</if>
			<if test="fiveBallCommission != null">five_ball_commission = #{fiveBallCommission},</if>
			<if test="tenBallCommission != null">ten_ball_commission = #{tenBallCommission},</if>
			<if test="threeBallCashback != null">three_ball_cashback = #{threeBallCashback},</if>
			<if test="fiveBallCashback != null">five_ball_cashback = #{fiveBallCashback},</if>
			<if test="tenBallCashback != null">ten_ball_cashback = #{tenBallCashback},</if>
			<if test="isTest != null and isTest != ''">is_test = #{isTest},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			update_time = sysdate()
 		</set>
 		where user_id = #{userId}
	</update>
	
	<update id="updateUserStatus" parameterType="SysUser">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>
	
	<update id="updateUserAvatar" parameterType="SysUser">
 		update sys_user set avatar = #{avatar} where user_name = #{userName}
	</update>
	
	<update id="resetUserPwd" parameterType="SysUser">
 		update sys_user set password = #{password} where user_name = #{userName}
	</update>

	<update id="resetUserPayPwd" parameterType="SysUser">
		update sys_user set pay_password = #{payPassword} where user_id = #{userId}
	</update>
	
	<delete id="deleteUserById" parameterType="Long">
 		update sys_user
 		set del_flag = '2'
		  ,amount = 0
		  ,score = 0
 		  ,open_id = null
 		  ,update_time = sysdate()
 		where user_id = #{userId}
 	</delete>
 	
 	<delete id="deleteUserByIds" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach> 
 	</delete>


	<update id="updateUserAmount" parameterType="SysUser">
		update sys_user
		<set>
			<if test="amount != null">amount = #{amount},</if>
			<if test="score != null">score = #{score},</if>
			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			update_time = sysdate()
		</set>
		where user_id = #{userId}
	</update>

	<select id="selectChildUserList" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.del_flag = '0'
		AND u.parent_user_id = #{parentUserId}
	</select>

	<select id="selectParentUserList" parameterType="SysUser" resultMap="ParentUserListResult">
		SELECT
			p.user_id AS user_id,
			max(pu.child_cnt) AS child_cnt,
			max( p.user_name ) AS user_name,
			max( p.nick_name ) AS nick_name,
			max( p.remark_name) AS remark_name,
			max(p.avatar) AS avatar,
			IFNULL( sum( um.cash_money ), 0 ) AS total_commission_money,
			IFNULL( sum( tm.pre_commission_money ), 0 ) AS today_commission_money,
			IFNULL( sum( commission.remain_commission_money ), 0 ) AS remain_commission_money
		FROM
			(
				SELECT
				     p.parent_user_id AS p_user_id
				     ,count(p.user_id) as child_cnt
				FROM sys_user p
				WHERE p.parent_user_id is not NULL
				AND p.parent_user_id != 1
				AND p.parent_user_id != 2
				GROUP BY p.parent_user_id
			)pu
			INNER JOIN sys_user p
			ON pu.p_user_id = p.user_id
			LEFT JOIN usermoney um ON um.user_id = p.user_id
			AND um.type = "11"
			LEFT JOIN (
				SELECT
					uw.user_id AS user_id,
					SUM(
					ROUND(( uw.bet_money - uw.deduct_money )* g.game_commission / 100, 2 )) AS pre_commission_money
				FROM
				userwin uw
				INNER JOIN sys_game g ON g.game_id = uw.game_id
				WHERE
				DATE_FORMAT( uw.win_time, '%Y-%m-%d' )= CURDATE()
				GROUP BY
				uw.user_id
			) tm ON tm.user_id = p.user_id
			left join sys_user pu on pu.user_id = p.parent_user_id
		    left join (
		        SELECT
					 c.parent_user_id AS parent_user_id
					,SUM(c.generate_amount) AS remain_commission_money
				FROM sys_user_commission c
				WHERE c.status = '0'
				GROUP BY c.parent_user_id
		    ) commission on p.user_id = commission.parent_user_id
		WHERE
		    p.del_flag = '0'
		<if test="userId != null and userId != 0">
			AND p.user_id = #{userId}
		</if>
		<if test="nickName != null and nickName != ''">
			AND CONCAT(IFNULL(p.nick_name,''), IFNULL(p.remark_name,'')) like concat('%', #{nickName}, '%')
		</if>
		GROUP BY
			p.user_id
		<if test="params.dataScope != null and params.dataScope != ''">
			${params.dataScope}
		</if>
		<if test="params.dataScope == null or params.dataScope == ''">
			ORDER BY
				p.user_id
		</if>
	</select>

	<select id="selectAgentUserList" parameterType="SysUser" resultMap="AgentUserListResult">
		SELECT
			c.user_id AS user_id,
			max(c.user_name ) AS user_name,
			max(c.nick_name ) AS nick_name,
			max(c.remark_name) AS remark_name,
			max(c.avatar) AS avatar,
			IFNULL( sum( um.cash_money ), 0 ) AS generate_commission_money
		FROM
			sys_user c
		LEFT JOIN usermoney um ON um.commission_from_user_id = c.user_id
		AND um.type = "11"
		WHERE
		c.del_flag = '0'
		<if test="parentUserId != null and parentUserId != 0">
			AND c.parent_user_id = #{parentUserId}
		</if>
		GROUP BY
		c.user_id
		ORDER BY
		c.user_id
	</select>

	<select id="selectEffectiveUsersCount" resultType="Integer">
		select count(*)
		from sys_user u
		where u.del_flag = '0'
		AND u.user_id > 1
	</select>

	<select id="selectUserByOpenId" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.open_id = #{openId}
		and u.del_flag = '0'
	</select>

	<update id="updateUserRemarkName" parameterType="SysUser">
		update sys_user
		set
		<if test="remarkName != null and remarkName != ''">remark_name = #{remarkName}</if>
		<if test="!(remarkName != null and remarkName != '')">remark_name = null</if>
		where user_id = #{userId}
	</update>

	<update id="mergeChildUser">
		update sys_user
		set parent_user_id = #{mainUserId}
		where parent_user_id = #{mergeUserId}
	</update>

	<select id="getUserTotalAmount" resultType="Float">
		select sum(amount)
		from sys_user
		where del_flag = '0'
		and is_test = '0'
	</select>

	<update id="updateUserParent" parameterType="SysUser">
		update sys_user
		set parent_user_id = #{parentUserId}
		where user_id = #{userId}
	</update>
</mapper> 